<?xml version="1.0" encoding="UTF-8" ?>
<!--
       Copyright 2015-2016 the original author or authors.
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dix.mapper.TokenMapper">

    <resultMap id="TokenResultMap" type="Token">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="token" jdbcType="VARCHAR" property="token" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="expire_time" jdbcType="BIGINT" property="expireTime" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    </resultMap>

    <select id="findToken" resultMap="TokenResultMap">
        select * from token where lower(token) = lower(#{token}) and status = 1 limit 0, 1
    </select>

    <update id="updateUserTokenInvalidByUserId">
        update token set status = -1 where user_id = #{user_id}
    </update>

    <update id="updateUserTokenInvalidByToken">
        update token set status = -1 where lower(token) = lower(#{token})
    </update>

    <insert id="insert" parameterType="Token" useGeneratedKeys="true" keyProperty="id">
        insert into token (token, type,
        status, user_id, expire_time,
        create_time, update_time)
        values (#{token,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
        #{status,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{expireTime,jdbcType=BIGINT},
        #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT})
    </insert>

    <update id="update" parameterType="Token">
        update token
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="expireTime != null">
                expire_time = #{expireTime,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>